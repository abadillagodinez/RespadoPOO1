/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interfaz;

import Logic.*;
import javax.swing.JOptionPane;

/**
 *
 * @author retr0
 */
public class ConsultaDeFaltantesPorRetirar extends javax.swing.JFrame {
    Counter counter;

    /**
     * Creates new form ConsultaDeFaltantesPorRetirar
     */
    public ConsultaDeFaltantesPorRetirar(Counter counter) {
        this.counter = counter;
        initComponents();
        for(int i = 0; i < this.counter.getCasilleros().size(); i++){
            Casillero actual =  this.counter.getCasilleros().get(i);
            for(int j = 0; j < actual.getEntregables().size(); j++){
                Entregable entreActual = actual.getEntregables().get(j);
                if(!entreActual.getEstadoEntrega()){
                    lstEntregables.add(entreActual.toLst(actual));
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lstEntregables = new java.awt.List();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Articulos sin entregar"));

        jButton1.setText("Notificar al cliente");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lstEntregables, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 179, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(lstEntregables, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String codCliente = getIDClienteDeLinea(lstEntregables.getSelectedItem());
        String codCasillero = getCodCasillero(lstEntregables.getSelectedItem());
        String codEntregable = getCodEntregable(lstEntregables.getSelectedItem());
        for (int i = 0; i < counter.getClientes().size(); i++){
            Cliente actual = counter.getClientes().get(i);
            if(actual.getIdCliente().equals(codCliente)){
                String mensaje = "Estimado cliente, se le recuerda que tiene un entregable de codigo: " + codEntregable
                               + " pendiente de retiro en el casillero: " + codCasillero;
                counter.enviarCorreo(actual, mensaje);
            }
        }
        JOptionPane.showMessageDialog(this, "Se ha logrado notificar exitoxamente", "Notificacion", 1);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * obtiene el id del cliente segun la linea
     * @param linea
     * @return 
     */
    private String getIDClienteDeLinea(String linea){
        String res = "";
        int cont = 0;
        for(int i = 0; i < linea.length(); i++){
            char c = linea.charAt(i);
            if(cont < 2 && c == ','){
                cont++;
            }
            else if(cont == 2){
                for(int j = i+10; j < linea.length(); j++){
                    res += linea.charAt(j);
                }
            }
        }
        return res;
    }
    
    /**
     * obtienen el codigo del entregable segun la linea
     * @param linea
     * @return 
     */
    private String getCodEntregable(String linea){
        String res = "";
        for(int i = 8; i < linea.length(); i++){
            if(linea.charAt(i) == ','){
                break;
            }
            else{
                res += linea.charAt(i);
            }
        }
        return res;
    }
    
    /**
     * obtienen el codigo del casillero segun la linea
     * @param linea
     * @return 
     */
    private String getCodCasillero(String linea){
        String res = "";
        int cont = 0;
        for(int i = 0; i < linea.length(); i++){
            char c = linea.charAt(i);
            if(cont < 1 && c == ','){
                cont++;
            }
            else if(cont == 1){
                for(int j = i+12; j < linea.length(); j++){
                    if(linea.charAt(j) == ','){
                        break;
                    }
                    else{
                        res += linea.charAt(j);
                    }
                }
                break;
            }
        }
        return res;
    }
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private java.awt.List lstEntregables;
    // End of variables declaration//GEN-END:variables
}
